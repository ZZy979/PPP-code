第2章
//  在一行中的//之后的内容都是注释。
<<  C++的左移/输出运算符。
C++  一种编程语言。
注释(comment)  用于描述程序做的事情，帮助人们读懂代码，会被编译器忽略。
编译器(compiler)  将源代码转换为目标代码的程序。
编译时错误(compile-time error)  由编译器发现的错误。
cout  C++标准输出流。
可执行程序(executable)  可以在计算机上运行的程序。
函数(function)  一个指令序列，可以使用给定参数调用，可能返回一个值。
头文件(header)  包含声明的文件，其中的声明用于在程序的不同部分之间共享接口，通常有后缀.h。
集成开发环境(IDE)  包括一个具有语法高亮、自动补全等功能的代码编辑器，以及其他编译、调试、运行代码功能的工具集合。
#include  用于将头文件的内容包含进当前源文件的指令。
库(library)  一组类型、函数、类等，实现了一组功能，可能被很多程序所使用。
链接器(linker)  将目标代码和库文件组合在一起生成可执行程序的程序。
main()  C++程序的入口函数。
目标代码(object code)  编译器的输出、链接器的输入。
输出(output)  计算生成的值，例如函数返回值或写到屏幕上的一行字符。
程序(program)  足够完整、可以被计算机执行的代码（可能与其相关联的数据一起）。
源代码(source code)  程序员编写的代码。
语句(statement)  函数中控制执行流程的基本单元，例如if语句、for语句、while语句、do-while语句、switch语句、表达式语句、声明等。

第3章
赋值(assignment)  给对象一个新值。
cin  C++标准输入流。
连接(concatenation)  将两个字符串拼接在一起。
转换(conversion)  将一个类型的值转换为另一个类型。
声明(declaration)  命名一个对象的语句。
递减(decrement)  将变量的值减1。
定义(definition)  为一个对象分配内存空间的声明。
递增(increment)  将变量的值加1。
初始化(initialization)  给对象一个初值。
名字(name)  以字母开头、只包含字母、数字和下划线的字符序列。
缩小(narrowing)  从占用字节数较多、范围较大的类型转换为占用字节数较少、范围较小的类型。
对象(object)  用来保存一个指定类型的值的一些内存单元。
运算(operation)  对对象执行的某种动作，例如相加、取模、比较、输入/输出、函数调用等。
运算符(operator)  表示内置运算的符号，例如+、*、&等。
类型(type)  定义一组可能的值和一组操作，例如内置类型（int、double等），自定义类型。
类型安全(type safety)  当一个程序仅按照一个对象的类型的规则使用该对象时，该程序是类型安全的。
值(value)  内存中根据类型来解释的一组比特位。
变量(variable)  一个命名的对象。
